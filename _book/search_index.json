[
["brainstorm.html", "Chapter 8 Brainstorm 8.1 Overview 8.2 Remind yourself of the Toolbox file ecosystem 8.3 calculate_scores.r workflow 8.4 Update a data layer and let’s see the whole process again. 8.5 configure_toolbox.r 8.6 functions.r 8.7 TODISCUSS 8.8 TODISCUSS", " Chapter 8 Brainstorm THIS IS NOT A CHAPTER, but for meeting w/ @ningningj, @jules32 2/15 8.1 Overview This is a 2-hour hands-on training. All training materials are below, and can also serve as a self-paced workshop without in-person instruction. 8.1.1 Prerequisites Before you begin, do the following: Make sure you have RStudio and GitHub setup (Chapter 3), with an up-to-date version of R and RStudio Fork the toolbox-demo repository into your own GitHub account (click Fork in the upper right corner, and select your account) Clone the toolbox-demo repo from your GitHub account into RStudio (Chapter X) Get comfortable: be set up in a way so that you can see this tutorial and your RStudio window (maybe 2 screens, maybe switching between programs). 8.2 Remind yourself of the Toolbox file ecosystem Chapter 4 In the toolbox-demo repo, we have a scenario folder called region2016. 8.3 calculate_scores.r workflow calculate_scores.r is a script that you’ll run a lot - in its entirety and piece-by-piece. It will load the libraries you need, check your book keeping and configure everything for ohicore, calculate OHI scores by calculating the required dimensions in a specific order (see below) and ultimately save scores for each goal and dimension in scores.csv. OHI ‘dimensions’ are status, trend, pressures, resilience, likely future state, and scores, and are calculated for each goal. follow along, we’re doing this together… 8.3.1 run install_ohicore.r TODO: explanation of what’s happening, potential errors (eg not have devtools installed, typos…) 8.3.2 region2016/calculate_scores.r Open calculate_scores.r by navigating to it in the region2016 folder and clicking on it. comments up top to help explain run line-by-line, explain warning messages. The order that CalculateAll() operates: YOUR goal models (status + trend) in functions.r, pressures and resilience based on YOUR matrix tables, Likely Future State and Scores (combo of the above) ## run the configure_toolbox.r script to check configuration source(&#39;~/github/toolbox-demo/region2016/configure_toolbox.r&#39;) # ... # tr_travelwarnings # Warning messages: # 1: In ohicore::CheckLayers(&quot;layers.csv&quot;, &quot;layers&quot;, flds_id = conf$config$layers_id_fields) : # Unused fields... # ico_spp_iucn_status: iucn_sid # 2: In ohicore::CheckLayers(&quot;layers.csv&quot;, &quot;layers&quot;, flds_id = conf$config$layers_id_fields) : # Rows duplicated... # ico_spp_iucn_status: 816 ## calculate scenario scores scores = ohicore::CalculateAll(conf, layers) # Running Setup()... # Calculating Status and Trend for each region for FIS... # Calculating Status and Trend for each region for MAR... # 95th percentile for MAR ref pt is: 0.0758396517531756 # ... # Calculating Pressures for each region... # There are 6 pressures subcategories: pollution, alien_species, habitat_destruction, fishing_pressure, climate_change, social # These goal-elements are in the weighting data layers, but not included in the pressure_matrix.csv: # LIV-aqf # These goal-elements are in the pressure_matrix.csv, but not included in the weighting data layers: # CP-coral, CP-mangrove, CP-saltmarsh, CS-mangrove, CS-saltmarsh, HAB-coral, HAB-mangrove, HAB-saltmarsh, HAB-seagrass, LIV-ph, LIV-tran, CP-seaice_shoreline, HAB-seaice_edge, ECO-wte, LIV-wte, LIV-sb # Calculating Resilience for each region... # There are 7 Resilience subcategories: ecological, alien_species, goal, fishing_pressure, habitat_destruction, pollution, social # These goal-elements are in the resilience_matrix.csv, but not included in the weighting data layers: # CP-coral, CP-saltmarsh, CS-saltmarsh, HAB-coral, HAB-saltmarsh, HAB-seagrass, CP-mangrove, CS-mangrove, HAB-mangrove, HAB-seaice_edge, CP-seaice_shoreline # ... # Calculating Goal Score and Likely Future for each region for FIS... # Calculating Goal Score and Likely Future for each region for MAR... # ...Calculating post-Index function for each region for FP... # Calculating post-Index function for each region for LE... # Calculating Index score for each region for supragoals using goal weights... # Calculating Likely Future State for each region for supragoals using goal weights... # Calculating Post-process PreGlobalScores() function for each region... # Calculating scores for ASSESSMENT AREA (region_id=0) by area weighting... # Calculating FinalizeScores function... And the warning messages: Warning messages: 1: In left_join_impl(x, y, by$x, by$y, suffix$x, suffix$y) : joining factors with different levels, coercing to character vector 2: In left_join_impl(x, y, by$x, by$y, suffix$x, suffix$y) : joining factor and character vector, coercing into character vector 3: In left_join_impl(x, y, by$x, by$y, suffix$x, suffix$y) : joining factors with different levels, coercing to character vector 4: In left_join_impl(x, y, by$x, by$y, suffix$x, suffix$y) : joining factor and character vector, coercing into character vector 5: In min(d$x, na.rm = T) : no non-missing arguments to min; returning Inf 6: In max(d$x, na.rm = T) : no non-missing arguments to max; returning -Inf 7: In min(d$x, na.rm = T) : no non-missing arguments to min; returning Inf 8: In max(d$x, na.rm = T) : no non-missing arguments to max; returning -Inf 8.3.3 Recap of what just happened 8.4 Update a data layer and let’s see the whole process again. 8.4.1 update data layer but with the same layer name TODO: add layer in demo/ folder and have them move it to layers/ and register it too, briefly. 8.4.2 rerun calculate_scores.r see that now scores.csv shows up in the git window. Great way to check your work. Which goal do you expect to change? So now let’s take a closer look, let’s check out configure_toolbox.r, the first thing that runs. 8.5 configure_toolbox.r What does it do? 8.5.1 loads libraries (also, if you are requiring other libraries, this would be the place to put them) 8.5.2 ohicore::Conf() ## load scenario configuration conf = ohicore::Conf(&#39;conf&#39;) # (no output). TODO: Explain 8.5.3 ohicore::CheckLayers() It lists all of the layers that are registered. Check to make sure ours is there. ## check that scenario layers files in the \\layers folder match layers.csv registration. Layers files are not modified. ohicore::CheckLayers(&#39;layers.csv&#39;, &#39;layers&#39;, flds_id=conf$config$layers_id_fields) Warning messages alert you to problems with specific layers. eg duplicates in a status layer. Byproduct of the repo creation; you’ll be changing this layer anyways. Warning messages: 1: In ohicore::CheckLayers(&quot;layers.csv&quot;, &quot;layers&quot;, flds_id = conf$config$layers_id_fields) : Unused fields... ico_spp_iucn_status: iucn_sid 2: In ohicore::CheckLayers(&quot;layers.csv&quot;, &quot;layers&quot;, flds_id = conf$config$layers_id_fields) : Rows duplicated... ico_spp_iucn_status: 816 8.5.4 ohicore::Layers() TODO: explain ## load scenario layers for ohicore to access. Layers files are not modified. layers = ohicore::Layers(&#39;layers.csv&#39;, &#39;layers&#39;) # (no output) 8.6 functions.r Remember from calculate_scores.r that after configure_toolbox, the next thing that happens is that CalculateScores() runs through the goal models and calcuates status and trend. Let’s look line-by-line at one of those goal models. We’ll do it for the goal whose layer we changed. 8.7 TODISCUSS If you were to add a new data layer and/or change the goal model… (?) how far can we get into that from here? 8.8 TODISCUSS I deleted the figure-making in calculate_scores.r for now "]
]
