[
["toolbox-ecosystem.html", "Chapter 4 Toolbox Ecosystem 4.1 Overview 4.2 Prerequisites", " Chapter 4 Toolbox Ecosystem 4.1 Overview Welcome to the OHI Toolbox, the engine behind all OHI assessments. The Toolbox is an ecosystem of R scripts and data files, organized in folders and sub-folders. In this chapter, we will learn how the Toolbox is structured - where you would store data, modify models, make calculations, as well as record decision-makings. The Toolbox ecosystem introduced here is the same in any assessment. So, if you want to explore the goal model for the Gulf of Guayaquil assessment, you could navigate to their models in the same way. Let’s get started! 4.2 Prerequisites Before the training, please make sure you have done the following: Have up-to-date versions of R and RStudio and have RStudio configured with Git/GitHub https://cloud.r-project.org http://www.rstudio.com/download http://happygitwithr.com/rstudio-git-github.html Fork the toolbox-demo repository into your own GitHub account by going to https://github.com/OHI-Science/toolbox-demo, clicking “Fork” in the upper right corner, and selecting your account Clone the toolbox-demo repo from your GitHub account into RStudio into a folder called “github” in your home directory (filepath “~/github”) Get comfortable: be set up with two screens if possible. You will be following along in RStudio on your own computer while also watching an instructor’s screen or following this tutorial. Now you have set up your computer, let’s open the toolbox-demo repository on your computer, and go from there. 4.2.1 Main folder When you first open the repository, in the main folder, you’ll encounter these files and folders: Overall, all the main files you will see are either of the two file types: .csv files contain data inputs or configuration information. .R or .Rmd scripts are written in the programming language R and use data inputs for processing and calculations. Among all the files on your screen, the most important files are: install_ohicore.r. ohicore is the backbone software package of the toolbox. It is a suite of scripts that contain all the formulas to string together the data and models that you provide for your assessment, and calculate OHI scores. You don’t need to interact with or see the inside of ohicore yourself during the assessment, but you do need to install this software package once at the start of your assessment by running this script. prep is a data preparation folder. As the name suggests, this is where you will store raw data, explore and format those data, and make trial runs of different models. You will spend roughly the first half of your time during an assessment here. region2016 is the scenario folder. The scenario folder is probably the most important folder within the repository. It contains all of the inputs needed to calculate OHI scores, and you will modify these inputs when conducting your assessment. By default it is named regionYEAR (eg. cnc2016 for New Caledonia 2016) to indicate that the assessment is conducted at the region scale (province, state, district, etc.), based on input layers and goal models used in the most recent global assessment (eg. 2016). README.md file accompanys most folders or files, as you will discover. It’s a place to take notes for yourself, your team, and anyone interested in the future. Let’s take a closer look at the prep and region2016 folders. 4.2.2 prep folder Click on prep and let’s see what’s inside: Within prep, there is a sub-folder for each goal and subgoal, as well as pressures and resilience. Click on the `CW’ folder. Within each goal folder, there are typically a .Rmd script and a sub-folder to contain data. The CW_data_prep.Rmd document is a script where you will explore your raw data, format the data, try different models, make graphs and maps, as well as document decision makings. We will come back to this script in Chapter @ref(data prep) to learn how to prepare data for calculations. We use .Rmd files because it can be rendered to a webpage, as in CW_data_prep.html in the same CW folder. Click open it in a web browser, and you will see a clean, human-readable webpage that can be shared and viewed by anyone. Now we’ve walked through the prep folder, let’s take a look at the scenario folder. Click back to the main toolbox-demo folder, and open the region2016 folder. 4.2.3 region2016 folder Again, this scenario folder contains all the data layers and scripts for you to calculate OHI scores. Let’s look into the sub-folders and see what they do. 4.2.3.1 layers &amp; layers.csv After you prepared your data layers in the prep folder, you will save them in the layers folder, and register them in layers.csv. (You will learn how to do so in Chapter @ref(data prep)). layers folder contains individual data layers as .csv files for each goal and subgoal, named in a specific manner for easy organization and recognition, as shown here. layers.csv is a data registry for all the data layers in the layers folder. It’s also a directory for ohicore to find the exact data layers for calculations. The file itself is spreadsheet that’s best to be opened in a spreadsheet editor such as Microsoft Excel. 4.2.3.2 conf conf folder includes important configuration files required to calculate OHI scores. Most of the maneuvering in the Conduct phase of the assessment is done within this folder. There are both .R scripts and .csv files. Let’s see what they are. 4.2.3.2.1 functions.R This R script contains the equations for each goal and sub-goal model. Much of your time will be spent here modifying goal models with the data you prepared in prep folder. Each goal and sub-goal equation is stored as a separate function within the script. These functions calculate the status and trend using prepared layers saved in the ‘layers’ folder and registered in layers.csv. 4.2.3.3 pressures &amp; resilience There are four .csv files relating to pressures and resilience. pressures_categories.csv pressures_matrix.csv pressures_categories.csv pressures_matrix.csv They are spreadsheets best to be opened with Excel. Pressures and Resilience are two of the four dimensions used to evaluate each goal or sub-goal, along with Status and Trend that you calculate in functions.R. We will go through how to modify these tables in Chapter @ref(pressures resilience) later. Now, we won’t dwell on these files much except to show you where they are, but you can refer back to this section for the detailed information listed below when you get to Chapter @ref(pressures resilience) pressures_categories.csv This is a table to record the name of each pressures data layer, its category, and sub-category. Each data layer name is the same name that’s saved in the layers folder and is registered in layers.csv. Each layer falls under one of two categories - ecological or social pressures, and one of several sub-categories to further represent the origin of the pressure (e.g. climate change, fishing, etc), which is also indicated by a prefix of each data layer name (for example: po_ for the pollution sub-category). For more information, see how to modify pressures layers. pressures_matrix.csv It is a table that indicates which individual pressures (stressors) affect which goal, sub-goals, or components, and weights them from 1-3 (a weight of 0 is shown as a blank). A higher weight indicates more negative impacts on that goal or component of the goal. These weights are relative to each row of the matrix (goal, sub-goal, or component). These weights are used in global assessments based on scientific literature and expert opinion, and you can modify the weightings if necessary for your assessment. The pressures matrix is the same as Table S25 in the Supplementary Information for Halpern et al. 2012. Each pressure (column) of the pressures matrix is the layer name of the pressures layer file that is saved in the layers folder and is registered in layers.csv, matching what’s recorded in the pressures_categories.csv. For more information, see how to modify pressures layers. resilience_categories.csv Similar to pressures_categories.csv, this file contains information on each resilience data layer, including its name, category, and sub-category. Each resilience layer’s name is the same as the data layer to be saved in the layers folder and is registered in layers.csv. In addition, it also includes information on category type - ecosystem, regulatory, or social, indicating the origin of the resilience layer. Each resilience layer is also assigned a weight of 0-1, representing the level of resilience against pressures. Different from the values used in pressures matrix, the resilience weights depend on the level of information available. For more information, read how to modify resilience layers. resilience_matrix.csv It is a table that indicates which individual resilience measures affect which goal, sub-goals, or components. These weights are stored in a separate file in the conf folder: resilience_weights.csv. The resilience matrix is the same as Table S26 in the Supplementary Information for Halpern et al. 2012. For more information, read how to modify resilience layers. 4.2.3.4 config.R It configures labeling and constants appropriately. You will only need to modify this file when working with goals that have categories (example: habitat types or economy sectors) that are affected differently by pressures and resilience measures. 4.2.3.5 goals.csv goals.csv is another spreadsheet file that’s best to be opened in Excel. goals.csv is a table with information about goals and sub-goals, including: order_color &amp; order_hierarchy: the order to display in flower plots order_calculate: the order in which the goals and sub-goals are calculated for the overall index scores goal &amp; parent: indicates the relationship between sub-goals and supra-goals (i.e. goals - with sub-goals) weight: how each goal is weighted to calculate the final Index scores preindex_function: indicate what parameters are called to calculate scores for goals and - sub-goals in functions.r postindex_function: indicate what parameters are called to calculate scores for supra-goals in functions.r We have just gone over the files in the conf folder. To recap, conf folder contains important configuration files required to calculate OHI scores, including functions.R, pressures and resilience files, etc. Now let’s take a step back to the region2016 folder, and check out what else are there. 4.2.4 configure_toolbox.r This script does the pre-checks before running goal models and calculate scores. It loads ohicore, calls all goal functions and data layers in the “conf” folder, and check that all data layers are registered properly. You are encouraged to use this script when you’re working on individual goal models. After you register data layers for a goal, or make any changes to the data layers, source this script before running model-specific functions in functions.R. 4.2.5 calculate_scores.R calculate_scores.R is a script you’ll come to use often. As the name tells us, it is a script to calculate OHI scores. Whenever you change any data inlayers, modify models in functions.R, and make changes to pressures and resilience, you could run this script and see how the OHI scores change. This script runs everything required to calculate OHI scores using the prepared layers the layers folder that are registered in layers.csv. Scores will be saved in scores.csv. 4.2.6 Recap Toolbox is a ecosystem of data layers and scripts, contained in folders and their sub-folders. Behind the scenes in the Toolbox, there is a backbone package called ohicore. You won’t interact with it directly, but you will need to install this package at the beginning of your assessment. At the first stage of your assessment, you will spend most of your time in prep folder, where you upload, explore, and format your data layers to be saved in the scenario folder region2016 for the next step of calculations. region2016 is a folder with all the data layers, files, and scripts you’ll need to calculate scores. There you will register finished data layers, modify goal models, modify pressures and resilience, calculate OHI scores, and make flowerplots. Below is a figure that summarizes the information we just went through, in relation to the steps you would take in an assessment for future reference. "]
]
