[
["prep-data.html", "Chapter 5 Preparing data: Basic 5.1 Overview 5.2 Data Formatting requirements 5.3 Data Wrangling 5.4 Save and Register data layers 5.5 Register data layers in layers.csv", " Chapter 5 Preparing data: Basic The purpose of Chapter 5 is to introduce you to the basic workflow for preparing data for OHI. This is a a 2-hour hands-on training: you will be following along on your own computer and working with a copy of the demonstration repository (toolbox-demo) that is used throughout the this chapter. 5.1 Overview Preparing data takes the biggest chunk of time when you’re using the OHI Toolbox, even more than the final scores calculation itself. That’s when you explore raw data, see whether it fits with your ideal spatial boundaries and whether it makes sense to include it in your final calculations. If it does, you can format it further and save it as data layers, or Toolbox inputs for scores calculations. The Starter Repo ?? aims to help you wade through these important first steps of the assessment. Treat the prepatory, or “prep”, files as your notebook, calculator, and presentation of your work. Here, the process of data exploration is recorded and can be easily shared with anyone. In this chapter, we will go through the basic requirements and steps of preparing a data layer: understand the formatting requirements try a hands-on tutorial in which you can use sample data to format and save register a data layer Prerequisites Before the training starts, please make sure you have done the following: Have up-to-date versions of R and RStudio and have RStudio configured with Git/GitHub https://cloud.r-project.org http://www.rstudio.com/download http://happygitwithr.com/rstudio-git-github.html Fork the toolbox-demo repository into your own GitHub account by going to https://github.com/OHI-Science/toolbox-demo, clicking “Fork” in the upper right corner, and selecting your account Clone the toolbox-demo repo from your GitHub account into RStudio into a folder called “github” in your home directory (filepath “~/github”) Get comfortable: be set up with two screens if possible. You will be following along in RStudio on your own computer while also watching an instructor’s screen or following this tutorial. After your toolbox-demo repository is set up, open the prep folder. It should look like this: Each goal and sub-goal has its own sub-folder, so you can store raw and intermediate data as you work in R Markdown (or R). It is highly recommended that data preparation occurs in the prep folder as much as possible, as it will also be archived by GitHub for future reference. But before we start preparing a data layer, let’s first go over the data formatting requirements. 5.2 Data Formatting requirements A data layer is a data file used to calculate scores. The global analysis included over 100 data layer files, and there will probably be as many in your own assessments. Each data layer (data input) has its own .csv file. These data layers are combined to calculate goal scores, meaning that they are inputs for status, trend, pressures, and resilience. The OHI Toolbox expects each .csv file to have: data for every region within the study area a unique region identifier (rgn_id) associated with a single score or value. data organized in ‘long’ format - as few columns as possible. (You can read more about long formatting here) OHI goal scores are calculated at the scale of the reporting unit, which is called a ‘region’ and then combined to produce the score for the overall area assessed, called a ‘study area’. For example, the U.S. is a study area, and each coastal state is a region. In addition, to calculate trend, input data should be available as a time series for at least 5 recent years - and the longer the better, as this can be used in setting temporal reference points. Finalized data layers have at least two columns: the rgn_id column and a column with data identified by its units (eg. km2 or score). There often may be a year column or a category column (for natural product categories or habitat types). Below are examples of two different data layer files: tourism count (tr_total.csv) and natural products harvested (np_harvest_tonnes.csv). They show information for a study area with 4 regions. Each region has multiple years of data. And the second data layer has an additional ‘categories’ column for the different types of natural products that were harvested. In this example, the two data layers are appropriate for status calculations with the Toolbox because: At least five years of data are available There are no data gaps Data are presented in ‘long’ or ‘narrow’ format When data gaps, temporal or spatial, are inevitable, various gap-filling techniques can be used. We won’t go through the details here. For more information and examples, visit OHI Manual 5.3 Data Wrangling So how do we get from raw data to a data layer that looks like the ones shown above? When we first access a data set, we often don’t know whether it is suitable for our purpose, or if it provides adequate information. Raw data can be in a different format than the desired long format and have extra or incomplete information. The main task of data preparation is to comb through the raw data, combine different sources, and sometimes fill in the infomration gap. We call this process “data wrangling.” For reproducibity and transparency, it is also good practice to record and share the decision-making process - trials and errors, why you decide to include, or more importantly, exclude a certain data source. Fortunately, we can take notes on the data exploration process and code in one place! Here is an example of a data prep document. Let’s give it a try to make one just like this. Now let’s switch to the demo repo. Today we will use the Clean Water (CW) goal as an hands-on example. We will get sample secchi depth data, as an indicator of water clarity. Click on the CW folder and open CW_data_prep.Rmd. We will follow the tutorial from there. 5.4 Save and Register data layers After you have successfully processed a data layer, and it can be used by the Toolbox for calculations, it needs to be saved and registered here: layers folder is where all data layers live, and where the Toolbox pulls a layer out when needed. layers.csv is a giant spreadsheet that contains information about each layer - which goal it is used for, filename, column names, etc., and it will direct ohicore to appropriate data layers during calculations. Let’s first save the layer. You can do that in the prep script. Let’s swtich back to the Demo repository, and follow the last section. 5.5 Register data layers in layers.csv After we have saved a data layer in layers folder, we will catalogue the layer in layers.csv. ` If a layer simply has a new filename, only the filename column needs to be updated: However, if a new layer has been added (for example when a new goal model is developed), you will open layers.csv in a spreadsheet software (i.e. Microsoft Excel), add a new row in the registry for the new data layer and fill in the first eight columns (columns A-H): targets: Add the goal/dimension that the new data layer relates to. Goals are indicated with two-letter codes and sub-goals are indicated with three-letter codes, with pressures, resilience, and spatial layers indicated separately. layer: Add an identifying name for the new data layer, which will be referenced in R scripts like functions.R and .csv files like pressures_matrix.csv and resilience_matrix.csv. name: Add a longer title for the data layer. description: Add a longer description of the new data layer. fld_value: Add the appropriate units for the new data layer. It is the same as the column name in the data file, which will be referenced in R scripts in subsequent calculations. (example: area_km2) units: Add a description about the units chosen in the fld_value column above. Think about what units you would like to be displayed online when filling out “units.” (example: km^2) filename: Add a filename for the new data layer that matches the name of the .csv file that was created previously in the layers folder. fld_id_num: Area designation that applies to the newly created data layer, such as: rgn_id and fao_id. It is important to check that you have filled you the fields correctly, for instance, if “fld_value” does not match the header of the source data layer, you will see an error message when you try to calculate scores. Other columns are generated later by the Toolbox as it confirms data formatting and content. Let’s open your layers.csv from your Finder, and we will fill it out together from there: This is what the new line should look like: TODO: Recap: - data requirements - raw data for clean waters and processed it to be a data layer - saved and registered layer is ready to be used by the toolbox to calcualte status and trend scores. what you will learn in chapter 6. "]
]
